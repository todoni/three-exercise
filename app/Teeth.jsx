/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.16 scene.gltf 
Author: dewa (https://sketchfab.com/dewa)
License: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
Source: https://sketchfab.com/3d-models/teeth-3a0fb31b9d864b27a0846aca8579461c
Title: Teeth
*/

import { useGLTF } from "@react-three/drei";
import * as THREE from "three";

export function Model(props) {
  const { nodes, materials } = useGLTF("/scene.gltf");
  const material = new THREE.MeshBasicMaterial({ wireframe: true });
  console.log(nodes);
  const handleClick = (e) => {
    console.log(e);
    const geometry = e.object.geometry;
    const positionAttribute = geometry.attributes.position;
    const vertex = new THREE.Vector3();
    const clickPosition = new THREE.Vector3(e.point.x, e.point.y, e.point.z);

    let closestVertexIndex = -1;
    let minDistance = Infinity;

    console.log(geometry, positionAttribute.count);
    for (let i = 0; i < positionAttribute.count; ++i) {
      const p = vertex.fromBufferAttribute(positionAttribute, i);
      //console.log(p);
      vertex.multiplyScalar(4.135);
      const distance = vertex.distanceTo(clickPosition);

      if (distance < minDistance) {
        minDistance = distance;
        closestVertexIndex = i;
      }
    }
    console.log(closestVertexIndex);
    vertex.fromBufferAttribute(positionAttribute, closestVertexIndex);
    const newVertexPosition = vertex.clone().addScaledVector(e.normal, 0.1);
    positionAttribute.setXYZ(
      closestVertexIndex,
      newVertexPosition.x,
      newVertexPosition.y,
      newVertexPosition.z
    );
    positionAttribute.needsUpdate = true;
  };

  return (
    <group
      {...props}
      dispose={null}
      onClick={(e) => {
        e.stopPropagation();
        handleClick(e);
      }}
    >
      <group rotation={[0, 0, 0]} scale={4.135}>
        <group position={[0, 0, 0]}>
          <mesh geometry={nodes.Object_3.geometry} material={material} />
          <mesh geometry={nodes.Object_5.geometry} material={material} />
          <mesh geometry={nodes.Object_6.geometry} material={material} />
          <mesh geometry={nodes.Object_7.geometry} material={materials.Teeth} />
        </group>
      </group>
    </group>
  );
}

useGLTF.preload("/scene.gltf");
